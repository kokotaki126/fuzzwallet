import{a as h}from"./chunk-UBKN4SHG.mjs";import{a as n}from"./chunk-PYNE2KAA.mjs";import{a as m}from"./chunk-I7WRJY7K.mjs";import{a as f}from"./chunk-OG333K5S.mjs";import{a as d}from"./chunk-7IGH7N52.mjs";import{a as y}from"./chunk-ZFIMVSCR.mjs";import{b as u}from"./chunk-F7CR75CJ.mjs";import{a as l}from"./chunk-N4RBQZ2B.mjs";import{b as o}from"./chunk-NL72WE3E.mjs";import{sha3_256 as A}from"@noble/hashes/sha3";var r=class r extends l{constructor(i){super();let{data:e}=i,t=o.fromHexInput(e);if(t.toUint8Array().length!==r.LENGTH)throw new Error(`Authentication Key length should be ${r.LENGTH}`);this.data=t}serialize(i){i.serializeFixedBytes(this.data.toUint8Array())}static deserialize(i){let e=i.deserializeFixedBytes(r.LENGTH);return new r({data:e})}toString(){return this.data.toString()}toUint8Array(){return this.data.toUint8Array()}static fromPublicKeyAndScheme(i){let{publicKey:e,scheme:t}=i,a;switch(t){case 3:case 2:{let s=e.bcsToBytes();a=new Uint8Array([...s,t]);break}case 0:case 1:{let s=e.toUint8Array(),b=o.fromHexInput(s).toUint8Array();a=new Uint8Array([...b,t]);break}default:throw new Error(`Scheme ${t} is not supported`)}let c=A.create();c.update(a);let K=c.digest();return new r({data:K})}static fromPublicKey(i){let{publicKey:e}=i,t;if(e instanceof y)t=0 .valueOf();else if(e instanceof d)t=1 .valueOf();else if(e instanceof m)t=2 .valueOf(),e=new n(e);else if(e instanceof f)t=2 .valueOf(),e=new n(e);else if(e instanceof n)t=2 .valueOf();else if(e instanceof h)t=3 .valueOf();else throw new Error("No supported authentication scheme for public key");return r.fromPublicKeyAndScheme({publicKey:e,scheme:t})}derivedAddress(){return new u(this.data.toUint8Array())}};r.LENGTH=32;var p=r;export{p as a};
//# sourceMappingURL=chunk-QPBCVYBA.mjs.map