import{h as o,t as p}from"./chunk-2LFRTQJA.mjs";import{a as u}from"./chunk-QPBCVYBA.mjs";import{a as r}from"./chunk-OG333K5S.mjs";import{b as c}from"./chunk-F7CR75CJ.mjs";import{generateRegistrationOptions as m,verifyRegistrationResponse as d,generateAuthenticationOptions as f,verifyAuthenticationResponse as h}from"@simplewebauthn/server";import{startRegistration as A,startAuthentication as R}from"@simplewebauthn/browser";import{isoBase64URL as l,cose as s,parseAuthenticatorData as b,convertCOSEtoPKCS as P}from"@simplewebauthn/server/helpers";var g=[s.COSEALG.ES256];async function V(e){let{authenticatorAttachment:t}=e;return m({...e,authenticatorSelection:{authenticatorAttachment:t,residentKey:"required",userVerification:"required"},supportedAlgorithmIDs:g})}async function q(e){return A(e)}async function E(e){return d({...e,requireUserVerification:!0,supportedAlgorithmIDs:g})}async function T(e){let{credentialId:t}=e,n=[{type:"public-key",id:typeof t=="string"?l.toBuffer(t):t}];return f({...e,allowCredentials:n,userVerification:"required"})}async function U(e){return R(e)}async function k(e){return h({...e})}function L(e){let t=l.toBuffer(e.response.authenticatorData),n=b(t),i=P(n.credentialPublicKey);return new r(i)}async function _(e){let{aptosConfig:t,transaction:n}=e,i=await o({...e});return console.log(i),p({aptosConfig:t,transaction:n,senderAuthenticator:i})}async function B(e){let{publicKey:t,alg:n}=e,i=n??s.COSEALG.ES256,a;switch(i){case s.COSEALG.ES256:a=new r(t);break;default:throw new Error("Algorithm is not supported")}let y=u.fromPublicKey({publicKey:a});return c.from(y.toString())}export{V as a,q as b,E as c,T as d,U as e,k as f,L as g,_ as h,B as i};
//# sourceMappingURL=chunk-2AOB4ZA4.mjs.map