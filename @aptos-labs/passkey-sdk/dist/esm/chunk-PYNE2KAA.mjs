import{a as n}from"./chunk-I7WRJY7K.mjs";import{a as s}from"./chunk-OG333K5S.mjs";import{a as r}from"./chunk-ZFIMVSCR.mjs";import{a as c}from"./chunk-V6JFR2CB.mjs";var u=class i extends c{constructor(e){super();this.publicKey=e}toUint8Array(){return this.publicKey.toUint8Array()}toString(){return this.publicKey.toString()}verifySignature(e){let{message:t,signature:l}=e;return this.publicKey.verifySignature({message:t,signature:l})}serialize(e){if(this.publicKey instanceof r)e.serializeU32AsUleb128(0),this.publicKey.serialize(e);else if(this.publicKey instanceof n)e.serializeU32AsUleb128(1),this.publicKey.serialize(e);else if(this.publicKey instanceof s)e.serializeU32AsUleb128(2),this.publicKey.serialize(e);else throw new Error("Unknown public key type")}static deserialize(e){let t=e.deserializeUleb128AsU32();switch(t){case 0:return new i(r.load(e));case 1:return new i(n.load(e));case 2:return new i(s.load(e));default:throw new Error(`Unknown variant index for AnyPublicKey: ${t}`)}}static isPublicKey(e){return e instanceof i}isEd25519(){return this.publicKey instanceof r}isSecp256k1PublicKey(){return this.publicKey instanceof n}};export{u as a};
//# sourceMappingURL=chunk-PYNE2KAA.mjs.map