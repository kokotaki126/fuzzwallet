import{c}from"./chunk-OG333K5S.mjs";import{c as u}from"./chunk-V6JFR2CB.mjs";import{b as o}from"./chunk-NL72WE3E.mjs";import{sha256 as p}from"@noble/hashes/sha256";var i=class r extends u{constructor(t){super();this.signature=t}toUint8Array(){return this.signature.toUint8Array()}toString(){return this.signature.toString()}serialize(t){if(this.signature instanceof c)t.serializeU32AsUleb128(0),this.signature.serialize(t);else throw new Error("Unknown signature type for AssertionSignature")}static deserialize(t){let e=t.deserializeUleb128AsU32();switch(e){case 0:return new r(c.load(t));default:throw new Error(`Unknown variant index for AssertionSignature: ${e}`)}}},l=class{constructor(n,t,e){this.signature=new i(n),this.authenticatorData=o.fromHexInput(t).toUint8Array(),this.clientDataJSON=o.fromHexInput(e).toUint8Array()}},g=class r extends u{constructor(t,e,a){super();this.paar=new l(t,e,a)}toUint8Array(){return this.paar.signature.toUint8Array()}toString(){return this.paar.toString()}getCollectedClientData(){let e=new TextDecoder("utf-8").decode(this.paar.clientDataJSON);return JSON.parse(e)}getVerificationData(){let t=p(this.paar.clientDataJSON),e=new Uint8Array(t.length+this.paar.authenticatorData.length);return e.set(this.paar.authenticatorData),e.set(t,this.paar.authenticatorData.length),e}serialize(t){this.paar.signature.serialize(t),t.serializeBytes(this.paar.authenticatorData),t.serializeBytes(this.paar.clientDataJSON)}static deserialize(t){let e=i.deserialize(t),a=t.deserializeBytes(),s=t.deserializeBytes();return new r(e.signature,a,s)}static load(t){let e=i.deserialize(t),a=t.deserializeBytes(),s=t.deserializeBytes();return new r(e.signature,a,s)}};export{i as a,l as b,g as c};
//# sourceMappingURL=chunk-JL2RLTCL.mjs.map