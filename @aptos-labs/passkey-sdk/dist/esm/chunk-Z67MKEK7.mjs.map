{"version":3,"sources":["../../src/internal/event.ts"],"sourcesContent":["// Copyright Â© Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * This file contains the underlying implementations for exposed API surface in\n * the {@link api/event}. By moving the methods out into a separate file,\n * other namespaces and processes can access these methods without depending on the entire\n * event namespace and without having a dependency cycle error.\n */\n\nimport { AptosConfig } from \"../api/aptosConfig\";\nimport { AccountAddress, AccountAddressInput } from \"../core\";\nimport { AnyNumber, GetEventsResponse, PaginationArgs, MoveStructId, OrderByArg, WhereArg } from \"../types\";\nimport { GetEventsQuery } from \"../types/generated/operations\";\nimport { GetEvents } from \"../types/generated/queries\";\nimport { EventsBoolExp } from \"../types/generated/types\";\nimport { queryIndexer } from \"./general\";\n\nexport async function getAccountEventsByCreationNumber(args: {\n  aptosConfig: AptosConfig;\n  accountAddress: AccountAddressInput;\n  creationNumber: AnyNumber;\n  options?: PaginationArgs & OrderByArg<GetEventsResponse[0]>;\n}): Promise<GetEventsResponse> {\n  const { accountAddress, aptosConfig, creationNumber, options } = args;\n  const address = AccountAddress.from(accountAddress);\n\n  const whereCondition: EventsBoolExp = {\n    account_address: { _eq: address.toStringLong() },\n    creation_number: { _eq: creationNumber },\n  };\n\n  const customOptions = {\n    where: whereCondition,\n    pagination: options,\n    orderBy: options?.orderBy,\n  };\n\n  return getEvents({ aptosConfig, options: customOptions });\n}\n\nexport async function getAccountEventsByEventType(args: {\n  aptosConfig: AptosConfig;\n  accountAddress: AccountAddressInput;\n  eventType: MoveStructId;\n  options?: PaginationArgs & OrderByArg<GetEventsResponse[0]>;\n}): Promise<GetEventsResponse> {\n  const { accountAddress, aptosConfig, eventType, options } = args;\n  const address = AccountAddress.from(accountAddress).toStringLong();\n\n  const whereCondition: EventsBoolExp = {\n    account_address: { _eq: address },\n    indexed_type: { _eq: eventType },\n  };\n\n  const customOptions = {\n    where: whereCondition,\n    pagination: options,\n    orderBy: options?.orderBy,\n  };\n\n  return getEvents({ aptosConfig, options: customOptions });\n}\n\nexport async function getEvents(args: {\n  aptosConfig: AptosConfig;\n  options?: PaginationArgs & OrderByArg<GetEventsResponse[0]> & WhereArg<EventsBoolExp>;\n}): Promise<GetEventsResponse> {\n  const { aptosConfig, options } = args;\n\n  const graphqlQuery = {\n    query: GetEvents,\n    variables: {\n      where_condition: options?.where,\n      offset: options?.offset,\n      limit: options?.limit,\n      order_by: options?.orderBy,\n    },\n  };\n\n  const data = await queryIndexer<GetEventsQuery>({\n    aptosConfig,\n    query: graphqlQuery,\n    originMethod: \"getEvents\",\n  });\n\n  return data.events;\n}\n"],"mappings":"2HAkBA,eAAsBA,EAAiCC,EAKxB,CAC7B,GAAM,CAAE,eAAAC,EAAgB,YAAAC,EAAa,eAAAC,EAAgB,QAAAC,CAAQ,EAAIJ,EAQ3DK,EAAgB,CACpB,MANoC,CACpC,gBAAiB,CAAE,IAHLC,EAAe,KAAKL,CAAc,EAGhB,aAAa,CAAE,EAC/C,gBAAiB,CAAE,IAAKE,CAAe,CACzC,EAIE,WAAYC,EACZ,QAASA,GAAS,OACpB,EAEA,OAAOG,EAAU,CAAE,YAAAL,EAAa,QAASG,CAAc,CAAC,CAC1D,CAEA,eAAsBG,EAA4BR,EAKnB,CAC7B,GAAM,CAAE,eAAAC,EAAgB,YAAAC,EAAa,UAAAO,EAAW,QAAAL,CAAQ,EAAIJ,EAQtDK,EAAgB,CACpB,MANoC,CACpC,gBAAiB,CAAE,IAHLC,EAAe,KAAKL,CAAc,EAAE,aAAa,CAG/B,EAChC,aAAc,CAAE,IAAKQ,CAAU,CACjC,EAIE,WAAYL,EACZ,QAASA,GAAS,OACpB,EAEA,OAAOG,EAAU,CAAE,YAAAL,EAAa,QAASG,CAAc,CAAC,CAC1D,CAEA,eAAsBE,EAAUP,EAGD,CAC7B,GAAM,CAAE,YAAAE,EAAa,QAAAE,CAAQ,EAAIJ,EAE3BU,EAAe,CACnB,MAAOC,EACP,UAAW,CACT,gBAAiBP,GAAS,MAC1B,OAAQA,GAAS,OACjB,MAAOA,GAAS,MAChB,SAAUA,GAAS,OACrB,CACF,EAQA,OANa,MAAMQ,EAA6B,CAC9C,YAAAV,EACA,MAAOQ,EACP,aAAc,WAChB,CAAC,GAEW,MACd","names":["getAccountEventsByCreationNumber","args","accountAddress","aptosConfig","creationNumber","options","customOptions","AccountAddress","getEvents","getAccountEventsByEventType","eventType","graphqlQuery","GetEvents","queryIndexer"]}